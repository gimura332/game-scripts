// ==UserScript==
// @name         Mines 1 Win Hacker
// @namespace    http://tampermonkey.net/
// @version      3.0
// @description  –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –±–æ–º–±—ã –∏ —Å—É–Ω–¥—É–∫–∏ –≤ Mines 1 Win
// @match        https://1wqjnb.com/casino/play/1play_1play_mines?p=ur4o*
// @grant        none
// @run-at       document-end
// ==/UserScript==

(function() {
    'use strict';

    // –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä—ã
    const init = () => {
        // 1. –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
        const gameBoard = document.querySelector('.game-container') || 
                         document.querySelector('.mines-field') ||
                         document.querySelector('main');

        if (!gameBoard) {
            console.log('[Mines Hacker] –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞...');
            setTimeout(init, 2000);
            return;
        }

        console.log('[Mines Hacker] –ò–≥—Ä–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!');

        // 2. –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏
        const style = document.createElement('style');
        style.innerHTML = `
            .mines-bomb {
                background: #ff0000 !important;
                color: white !important;
                font-weight: bold !important;
                border: 3px solid black !important;
            }
            .mines-treasure {
                background: #00ff00 !important;
                color: white !important;
                font-weight: bold !important;
                border: 3px solid black !important;
            }
            #mines-hack-panel {
                position: fixed;
                top: 10px;
                left: 10px;
                background: rgba(0,0,0,0.8);
                color: white;
                padding: 10px;
                z-index: 99999;
                font-family: Arial;
                border: 2px solid gold;
            }
        `;
        document.head.appendChild(style);

        // 3. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –ø–æ–º–µ—Ç–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const scanField = () => {
            // –ò—â–µ–º –≤—Å–µ –∫–ª–µ—Ç–∫–∏
            const cells = gameBoard.querySelectorAll('div[class*="cell"], div[class*="tile"]');

            cells.forEach(cell => {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –±–æ–º–±—É
                if (cell.getAttribute('data-bomb') === 'true' || 
                    cell.innerHTML.includes('bomb') || 
                    cell.textContent === 'X') {
                    cell.classList.add('mines-bomb');
                    cell.textContent = 'üí£';
                }
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å—É–Ω–¥—É–∫
                else if (cell.getAttribute('data-treasure') === 'true' || 
                         cell.innerHTML.includes('diamond') || 
                         cell.textContent === 'üíé') {
                    cell.classList.add('mines-treasure');
                    cell.textContent = 'üí∞';
                }
            });

            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
            updatePanel();
        };

        // 4. –ü–∞–Ω–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        const updatePanel = () => {
            let panel = document.getElementById('mines-hack-panel');
            if (!panel) {
                panel = document.createElement('div');
                panel.id = 'mines-hack-panel';
                document.body.appendChild(panel);
            }
            panel.innerHTML = `
                <div>üí£ –ë–æ–º–±: ${document.querySelectorAll('.mines-bomb').length}</div>
                <div>üí∞ –°—É–Ω–¥—É–∫–æ–≤: ${document.querySelectorAll('.mines-treasure').length}</div>
                <div>üïí ${new Date().toLocaleTimeString()}</div>
            `;
        };

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
        setInterval(scanField, 2000);
        scanField();

        console.log('[Mines Hacker] –°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!');
    };

    // –î–∞–µ–º –∏–≥—Ä–µ 10 —Å–µ–∫—É–Ω–¥ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
    setTimeout(init, 10000);
})();
